/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        combos {
                compatible = "zmk,combos";
                combo_LPAR {
                        timeout-ms = <50>;
                        key-positions = <28 29>;
                        bindings = <&kp LPAR>;
                };
                combo_RPAR {
                        timeout-ms = <50>;
                        key-positions = <30 31>;
                        bindings = <&kp RPAR>;
                };
                combo_LBRC {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp LBRC>;
                };
                combo_RBRC {
                        timeout-ms = <50>;
                        key-positions = <31 32>;
                        bindings = <&kp RBRC>;
                };
                combo_LBKT {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp LBKT>;
                };
                combo_RBKT {
                        timeout-ms = <50>;
                        key-positions = <32 33>;
                        bindings = <&kp RBKT>;
                };
                combo_RETURN {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&kp RET>;
                };
                combo_DEL {
                        timeout-ms = <50>;
                        key-positions = <18 19>;
                        bindings = <&kp DEL>;
                };
        };
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
                };
        };
        behaviors {
                td0: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "TAP_DANCE_0";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LSHFT>, <&kp CAPS>;
                };
        };
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        label = "Base";
                        bindings = <
// ---------------------------------------------------------------   -------------------------------------------------------------
// |    TAB    |    Q    |    W    |    E    |    R    |    T    |   |    Y    |    U    |    I    |    O    |    P    |    \    |
     &kp TAB      &kp Q     &kp W     &kp E     &kp R     &kp T         &kp Y     &kp U     &kp I     &kp O     &kp P   &kp BSLH
// ---------------------------------------------------------------   -------------------------------------------------------------
// |  CTRL/ESC |    A    |    S    |    D    |    F    |    G    |   |    H    |    J    |    K    |    L    |    ;    |    '    |
   &mt LCTRL ESC  &kp A     &kp S     &kp D     &kp F     &kp G         &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
// ---------------------------------------------------------------   -------------------------------------------------------------
// |   SHFT    |    Z    |    X    |    C    |    V    |    B    |   |    N    |    M    |    ,    |    .    |    /    |    `    |
      &td0        &kp Z     &kp X     &kp C     &kp V     &kp B         &kp N     &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
// ---------------------------------------------------------------   -------------------------------------------------------------
//                                 |   GUI   |   LWR   |   SPC   |   |   BKSP  |   RSE   |   ALT   |
                                     &kp LGUI   &tog 1  &kp SPACE     &kp BSPC    &mo 2   &kp RALT
                                 // --------------------------------------------------------------
                        >;
                };

                lower_layer {
                        label = "Lower";
                        bindings = <
// ---------------------------------------------------------------   -------------------------------------------------------------
// |     1     |    2    |    3    |    4    |    5    |    6    |   |    7    |    8    |    9    |    0    |    -    |    =    |
       &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6        &kp N7    &kp N8    &kp N9    &kp N0   &kp MINUS &kp EQUAL
// ---------------------------------------------------------------   -------------------------------------------------------------
// |           |         |         |         |         |         |   |    4    |    5    |    6    |         |         |         |
      &trans     &trans    &trans    &trans    &trans    &trans         &kp N4    &kp N5    &kp N6    &trans   &trans    &trans
// ------------------------------------------------------------------------------------------------------------------------------
// |           |         |         |         |         |         |   |    1    |    2    |    3    |         |         |         |
      &trans   &trans     &trans    &trans   &trans    &trans        &kp N1    &kp N2    &kp N3    &trans    &trans    &trans
// ------------------------------------------------------------------------------------------------------------------------------
//                                 |         |         |         |   |         |         |         |
                                     &trans    &trans    &trans         &trans   &trans     &trans
                                 // ----------------------------------------------------------------
                        >;
                };

                raise_layer {
                        label = "Raise";
                        bindings = <
// -------------------------------------------------------------------------------------------------------------------------------
// |           |         |         |         |         |         |   |         |         |         |         |         |         |
      &trans     &trans    &trans    &trans    &trans    &trans         &trans   &trans     &trans   &trans    &trans    &trans
// -------------------------------------------------------------------------------------------------------------------------------
// |           |         |         |         |         |         |   |  LEFT   |  DOWN   |   UP    |  RIGHT  |         |         |
      &trans     &trans    &trans    &trans    &trans    &trans        &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans    &trans
// -------------------------------------------------------------------------------------------------------------------------------
// |           |         |         |         |         |         |   |         |         |         |         |         |         |
      &trans     &trans    &trans    &trans    &trans    &trans         &trans   &trans     &trans   &trans    &trans    &trans
// -------------------------------------------------------------------------------------------------------------------------------
//                                 |         |         |         |   |         |         |         |
                                     &trans    &trans    &trans         &trans   &trans     &trans
                                 // ----------------------------------------------------------------
                        >;
                };

                tri_layer {
                        label = "Adjust";
                        bindings = <
// ---------------------------------------------------------------   -------------------------------------------------------------
// |     F1    |    F2   |    F3   |    F4   |    F5   |    F6   |   |    F7   |    F8   |    F9   |   F10   |   F11   |   F12   |
       &kp F1     &kp F2    &kp F3    &kp F4    &kp F5    &kp F6        &kp F7    &kp F8    &kp F9   &kp F10   &kp F11   &kp F12
// ---------------------------------------------------------------   -------------------------------------------------------------
// |           |         |         |         |         |         |   |  Vol -  | Bright -| Bright +|  Vol +  |         |         |
      &trans     &trans    &trans    &trans    &trans    &trans      &kp C_VOL_DN &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_UP &trans &trans
// ------------------------------------------------------------------------------------------------------------------------------
// |   BTCLR   |   BT1   |   BT2   |   BT3   |   BT4   |   BT5   |   |         |  Mute   |         |         |         |         |
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &kp C_MUTE &trans &trans    &trans    &trans
// ------------------------------------------------------------------------------------------------------------------------------
//                                 |         |         |         |   |         |         |         |
                                     &trans    &trans    &trans         &trans   &trans     &trans
                                 // ----------------------------------------------------------------
                        >;
                };
        };
};
